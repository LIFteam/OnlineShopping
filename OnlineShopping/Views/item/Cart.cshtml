@model List<OnlineShopping.Models.product>

@{
    ViewBag.Title = "AddCart";
}

<h2>AddCart</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table>
            <tr>
                <th>Name
                <th>Description
                <th>Quantity
                <th>Price
            </tr>
            @foreach (var item in Model)
            {
                @Html.HiddenFor(model => item.productID)
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => item.productName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.productName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.productContent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.productContent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.productContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.productQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.productQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.productQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.productPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.productPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@Html.ActionLink("Pay", "Payment", Model)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
